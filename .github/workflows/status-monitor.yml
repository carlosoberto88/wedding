name: GitHub Actions Status Monitor

on:
  schedule:
    - cron: '*/5 * * * *'  # Runs every 5 minutes
  workflow_dispatch:  # Allows manual triggering

jobs:
  check-status:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          
      - name: Create monitoring script
        run: |
          cat > monitor.js << 'EOF'
          const https = require('https');

          function sendToSlack(message) {
            return new Promise((resolve, reject) => {
              const webhookUrl = process.env.SLACK_WEBHOOK_URL;
              const data = JSON.stringify({
                text: message,
                username: 'GitHub Actions Monitor',
                icon_emoji: ':octocat:'
              });

              const options = {
                method: 'POST',
                headers: {
                  'Content-Type': 'application/json',
                  'Content-Length': data.length,
                }
              };

              const req = https.request(webhookUrl, options, (res) => {
                if (res.statusCode === 200) {
                  resolve();
                } else {
                  reject(new Error(`Status Code: ${res.statusCode}`));
                }
              });

              req.on('error', (error) => reject(error));
              req.write(data);
              req.end();
            });
          }

          function checkGitHubStatus() {
            return new Promise((resolve, reject) => {
              https.get(
                'https://www.githubstatus.com/api/v2/summary.json',
                (res) => {
                  let data = '';
                  res.on('data', (chunk) => data += chunk);
                  res.on('end', () => resolve(JSON.parse(data)));
                }
              ).on('error', reject);
            });
          }

          async function main() {
            try {
              // Send test message
              await sendToSlack('üîç Testing GitHub Actions monitoring setup...');
              
              // Check status
              const response = await checkGitHubStatus();
              const component = response.component;
              
              const statusEmoji = {
                'operational': '‚úÖ',
                'degraded_performance': '‚ö†Ô∏è',
                'partial_outage': 'üö®',
                'major_outage': '‚ùå'
              };
              
              const emoji = statusEmoji[component.status] || '‚ùì';
              const message = `GitHub Actions: ${emoji} ${component.status.replace('_', ' ').toUpperCase()}
              Description: ${component.description}
              Last Updated: ${new Date(component.updated_at).toLocaleString()}`;
              
              await sendToSlack(message);
              
            } catch (error) {
              console.error('Error:', error);
              await sendToSlack(`:x: Error checking GitHub Actions status: ${error.message}`);
              process.exit(1);
            }
          }

          main();
          EOF

      - name: Run monitor
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
        run: node monitor.js
